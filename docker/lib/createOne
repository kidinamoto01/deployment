#!/bin/bash

CHAIN_ID=$1
SUFFIX=$2
PROXY_PORT=$3
APP_PORT=$4
EXEC=$(echo $5 | sed s/\"//g)
ARGS=$(echo $6 | sed s/\"//g)

SCREEN_NAME=screen$1

NETWORK_NAME=$CHAIN_ID$SUFFIX
TENDERMINT_DATA=${CHAIN_ID}$SUFFIX



# CREATE NETWORK, VOLUME AND IMAGES

docker network create $NETWORK_NAME

#docker volume create --name $TENDERMINT_DATA
VOLUME_PATH=/home/ec2-user/deployment/docker/volumes/$TENDERMINT_DATA
mkdir  $VOLUME_PATH

echo "Launching app"
cmdApp="docker run -p $APP_PORT:$APP_PORT -it --name app$CHAIN_ID$SUFFIX --net=$NETWORK_NAME app $EXEC $ARGS; exec bash"
echo $cmdApp
screen -dmS app$CHAIN_ID$SUFFIX bash -c "$cmdApp"
sleep 1

echo "Launching proxy"
cmdProxy="docker run -p 46660:46660 -p $PROXY_PORT:46659 -it --name proxy$CHAIN_ID$SUFFIX --net=$NETWORK_NAME proxy abci_proxy -proxy=tcp://app$CHAIN_ID$SUFFIX:46659 -v; exec bash"
echo $cmdProxy
screen -dmS proxy$CHAIN_ID$SUFFIX bash -c "$cmdProxy"

echo "Init tendermint"

#!/bin/bash

#!/bin/bash
value='0'
while true; do
if [ $value == '0' ]
then
    echo docker run --name=TENDERMINT_TEMP$TENDERMINT_DATA --net=$NETWORK_NAME --volume=$VOLUME_PATH:/tendermint tendermint tendermint --home=/tendermint init 
    docker run --name=TENDERMINT_TEMP$TENDERMINT_DATA --net=$NETWORK_NAME --volume=$VOLUME_PATH:/tendermint tendermint tendermint --home=/tendermint init 
    value=$( ls $VOLUME_PATH | wc -l |tr '\n' ' ')
    echo "wait"
    sleep 1
else
    break
fi
done
echo "ok"
docker rm TENDERMINT_TEMP$TENDERMINT_DATA

# $VOLUME_PATH/genesis.json
#touch $VOLUME_PATH/priv_validator.json
sudo chown -R ec2-user:ec2-user $VOLUME_PATH
