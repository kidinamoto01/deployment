#!/usr/bin/python

#!/bin/python
import argparse
import subprocess
import os
import sys
from subprocess import Popen, PIPE

parser = argparse.ArgumentParser(prog='PROG')




parser.add_argument("-p", "--project", help="chain unique ID", default="TEST")
parser.add_argument("-a", "--app", help="name of the executable", default="abci_counter")

parser.add_argument("-g", "--gitrepo", help="git repository of the app", default="github.com/multiverseHQ/abci_sample")
parser.add_argument("-n", "--node", help="node", default="test")
parser.add_argument("-i", "--ips", help="ips", default="127.0.0.1")


parser.add_argument("-t", "--tendermintPort", help="exposed tendermint ports", default="46656")
parser.add_argument("-x", "--proxyPort", help="exposed proxy ports", default="46658")
parser.add_argument("-w", "--appPort", help="exposed app ports", default="401")



args = parser.parse_args()



def get_script_path(file):
   return '{}/lib/{}'.format(os.path.dirname(os.path.realpath(__file__)),file)

def get_current_path(file):
   return '{}/{}'.format(os.path.dirname(os.path.realpath(__file__)),file)


print "---------------- BUILD ---------------"
build = Popen(
	[get_script_path('build')]+
	[args.gitrepo]+
	[args.app])

build.wait()


print "---------------- LAUNCH ---------------"
#print(
#	[get_current_path('tendermintGenerator')]+
#	['--nodesName='+args.node]+
#	['--chainId='+args.project]+
#	['-t='+args.tendermintPort]+
#	['-p='+args.proxyPort]+
#	['-a='+args.appPort])

cmd = [get_current_path('tendermintGenerator')]+\
	['--nodesName='+args.node]+\
	['--chainId='+args.project]+\
	['create']+\
	['-t='+args.tendermintPort]+\
	['-p='+args.proxyPort]+\
	['-a='+args.appPort]+\
	['-e=\"'+args.app+'\"']+\
	['-f=\"'+args.appArgs+'\"']+\
	['-x']

print(cmd)


enableCommunication = Popen(cmd)
enableCommunication.wait()


ips = args.ips.split(",")
ports = args.tendermintPort.split(",")
nodeNames = args.node.split(",")
p2pseeds = ",".join(["{}:{}".format(ip, ports[0]) for ip in ips])

print "--- replace p2p seeds in config.toml ---"
for n in map(None,nodeNames):
    genesisReplaceP2PSeeds = Popen([get_script_path('genesisReplaceP2Pseeds')]+[args.project]+[n]+[p2pseeds])
    genesisReplaceP2PSeeds.wait()


print "---------------- Start -----------------"
for n,t in map(None,nodeNames, ports):
    start = Popen([get_script_path('startTendermint')]+[args.project]+[n,t])
    start.wait()
print "---------------- Wait -----------------"
sleep = Popen(['sleep','3'])
sleep.wait()

print "---------------- LAUNCH ---------------"
enableCommunication = Popen([get_script_path('enableCommunication')]+[args.project]+nodeNames)
enableCommunication.wait()
